var searchIndex = JSON.parse('{\
"chemfiles":{"doc":"Chemfiles is a multi-language library written in modern…","i":[[3,"Error","chemfiles","Error type for Chemfiles.",null,null],[12,"status","","The error status code",0,null],[12,"message","","A message describing the error cause",0,null],[3,"Atom","","An `Atom` is a particle in the current `Frame`. It stores…",null,null],[3,"AtomRef","","An analog to a reference to an atom (`&Atom`)",null,null],[3,"AtomMut","","An analog to a mutable reference to an atom (`&mut Atom`)",null,null],[3,"UnitCell","","An `UnitCell` represent the box containing the atoms, and…",null,null],[3,"UnitCellRef","","An analog to a reference to an unit cell (`&UnitCell`)",null,null],[3,"UnitCellMut","","An analog to a mutable reference to an unit cell (`&mut…",null,null],[3,"Residue","","A `Residue` is a group of atoms belonging to the same…",null,null],[3,"ResidueRef","","An analog to a reference to a residue (`&Residue`)",null,null],[3,"Topology","","A `Topology` contains the definition of all the atoms in…",null,null],[3,"TopologyRef","","An analog to a reference to a topology (`&Topology`)",null,null],[3,"Frame","","A `Frame` contains data from one simulation step: the…",null,null],[3,"Trajectory","","The `Trajectory` type is the main entry point when using…",null,null],[3,"Match","","A `Match` is a set of atomic indexes matching a given…",null,null],[3,"Selection","","A `Selection` allow to select atoms in a `Frame`, from a…",null,null],[3,"PropertiesIter","","An iterator over the properties in an atom/frame/residue",null,null],[3,"FormatMetadata","","`FormatMetadata` contains metdata associated with one…",null,null],[12,"name","","Name of the format.",1,null],[12,"extension","","Extension associated with the format.",1,null],[12,"description","","Extended, user-facing description of the format.",1,null],[12,"reference","","URL pointing to the format definition/reference.",1,null],[12,"read","","Is reading files in this format implemented?",1,null],[12,"write","","Is writing files in this format implemented?",1,null],[12,"memory","","Does this format support in-memory IO?",1,null],[12,"positions","","Does this format support storing atomic positions?",1,null],[12,"velocities","","Does this format support storing atomic velocities?",1,null],[12,"unit_cell","","Does this format support storing unit cell information?",1,null],[12,"atoms","","Does this format support storing atom names or types?",1,null],[12,"bonds","","Does this format support storing bonds between atoms?",1,null],[12,"residues","","Does this format support storing residues?",1,null],[4,"Status","","Possible causes of error in chemfiles",null,null],[13,"Success","","No error",2,null],[13,"MemoryError","","Error in memory allocations",2,null],[13,"FileError","","Error while reading or writing a file",2,null],[13,"FormatError","","Error in file formatting, i.e. the file is invalid",2,null],[13,"SelectionError","","Error in selection string syntax",2,null],[13,"ConfigurationError","","Error in configuration files syntax",2,null],[13,"OutOfBounds","","Error for out of bounds indexing",2,null],[13,"PropertyError","","Error related to properties",2,null],[13,"ChemfilesError","","Exception in the C++ chemfiles library",2,null],[13,"StdCppError","","Exception in the C++ standard library",2,null],[13,"UTF8PathError","","The given path is not valid UTF8",2,null],[4,"CellShape","","Available unit cell shapes.",null,null],[13,"Orthorhombic","","Orthorhombic cell, with the three angles equals to 90°.",3,null],[13,"Triclinic","","Triclinic cell, with any values for the angles.",3,null],[13,"Infinite","","Infinite cell, to use when there is no cell.",3,null],[4,"BondOrder","","Possible bond order associated with bonds",null,null],[13,"Unknown","","Unknown or unspecified bond order",4,null],[13,"Single","","Single bond",4,null],[13,"Double","","Double bond",4,null],[13,"Triple","","Triple bond",4,null],[13,"Quadruple","","Quadruple bond (present in some metals)",4,null],[13,"Quintuplet","","Quintuplet bond (present in some metals)",4,null],[13,"Amide","","Amide bond (required by some file formats)",4,null],[13,"Aromatic","","Aromatic bond (required by some file formats)",4,null],[4,"Property","","A `Property` is a piece of data that can be associated…",null,null],[13,"Bool","","Boolean property",5,null],[13,"Double","","Floating point property",5,null],[13,"String","","String property",5,null],[13,"Vector3D","","3-dimensional vector property",5,null],[5,"set_warning_callback","","Use `callback` for every chemfiles warning. The callback…",null,[[]]],[5,"formats_list","","Get the list of formats known by chemfiles, as well as all…",null,[[],[["vec",3],["formatmetadata",3]]]],[5,"version","","Get the version of the chemfiles library.",null,[[],["string",3]]],[5,"add_configuration","","Read configuration data from the file at `path`.",null,[[],[["result",4],["error",3]]]],[11,"last_error","","Get the last error message from the C++ library.",0,[[],["string",3]]],[11,"cleanup","","Clear any error from the C++ library",0,[[]]],[11,"new","","Create an atom with the given `name`, and set the atom…",6,[[],["atom",3]]],[11,"mass","","Get the atom mass, in atomic mass units.",6,[[]]],[11,"set_mass","","Set the atom mass to `mass`, in atomic mass units.",6,[[]]],[11,"charge","","Get the atom charge, in number of the electron charge e.",6,[[]]],[11,"set_charge","","Set the atom charge to `charge`, in number of the electron…",6,[[]]],[11,"name","","Get the atom name.",6,[[],["string",3]]],[11,"atomic_type","","Get the atom type.",6,[[],["string",3]]],[11,"set_name","","Set the atom name to `name`.",6,[[]]],[11,"set_atomic_type","","Set the atom type to `atomic_type`.",6,[[]]],[11,"full_name","","Try to get the full name of the atom from the atomic type.…",6,[[],["string",3]]],[11,"vdw_radius","","Try to get the Van der Waals radius of the atom from the…",6,[[]]],[11,"covalent_radius","","Try to get the covalent radius of the atom from the atomic…",6,[[]]],[11,"atomic_number","","Try to get the atomic number of the atom from the atomic…",6,[[]]],[11,"set","","Add a new `property` with the given `name` to this atom.",6,[[]]],[11,"get","","Get a property with the given `name` in this atom, if it…",6,[[],[["option",4],["property",4]]]],[11,"properties","","Get an iterator over all (name, property) pairs for this…",6,[[],["propertiesiter",3]]],[11,"new","","Create an `Orthorhombic` `UnitCell` from the three…",7,[[],["unitcell",3]]],[11,"infinite","","Create an `Infinite` `UnitCell`.",7,[[],["unitcell",3]]],[11,"triclinic","","Create an `Triclinic` `UnitCell` from the three lengths…",7,[[],["unitcell",3]]],[11,"from_matrix","","Create an `UnitCell` from a cell matrix. If `matrix`…",7,[[],["unitcell",3]]],[11,"lengths","","Get the three lengths of the cell, in Angstroms.",7,[[]]],[11,"set_lengths","","Set the three lengths of the cell, in Angstroms.",7,[[],[["result",4],["error",3]]]],[11,"angles","","Get the three angles of the cell, in degrees.",7,[[]]],[11,"set_angles","","Set the three angles of the cell, in degrees.",7,[[],[["result",4],["error",3]]]],[11,"matrix","","Get the unit cell matricial representation.",7,[[]]],[11,"shape","","Get the shape of the unit cell.",7,[[],["cellshape",4]]],[11,"set_shape","","Set the shape of the unit cell to `shape`.",7,[[["cellshape",4]],[["result",4],["error",3]]]],[11,"volume","","Get the volume of the unit cell.",7,[[]]],[11,"wrap","","Wrap a `vector` in this unit cell.",7,[[]]],[11,"new","","Create a new residue with the given `name`",8,[[],["residue",3]]],[11,"with_id","","Create a new residue with the given `name` and `id` as…",8,[[],["residue",3]]],[11,"size","","Get the number of atoms in this residue.",8,[[]]],[11,"id","","Get the identifier of this residue in the initial topology…",8,[[],["option",4]]],[11,"name","","Get the name of this residue.",8,[[],["string",3]]],[11,"add_atom","","Add the atom at index `atom` in this residue.",8,[[]]],[11,"contains","","Check if the atom at index `i` is in this residue",8,[[]]],[11,"atoms","","Get the list of atoms of this residue.",8,[[],["vec",3]]],[11,"set","","Add a new `property` with the given `name` to this residue.",8,[[]]],[11,"get","","Get a property with the given `name` in this frame, if it…",8,[[],[["option",4],["property",4]]]],[11,"properties","","Get an iterator over all (name, property) pairs for this…",8,[[],["propertiesiter",3]]],[11,"new","","Create a new empty topology.",9,[[],["topology",3]]],[11,"atom","","Get a reference of the atom at the given `index` in this…",9,[[],["atomref",3]]],[11,"atom_mut","","Get a mutable reference to the atom at the given `index`…",9,[[],["atommut",3]]],[11,"size","","Get the current number of atoms in this topology.",9,[[]]],[11,"resize","","Resize this topology to hold `natoms` atoms, inserting…",9,[[]]],[11,"add_atom","","Add an `Atom` at the end of this topology",9,[[["atom",3]]]],[11,"remove","","Remove an `Atom` from this topology by `index`. This…",9,[[]]],[11,"bonds_count","","Get the number of bonds in the topology.",9,[[]]],[11,"angles_count","","Get the number of angles in the topology.",9,[[]]],[11,"dihedrals_count","","Get the number of dihedral angles in the topology.",9,[[]]],[11,"impropers_count","","Get the number of improper dihedral angles in the topology.",9,[[]]],[11,"bonds","","Get the list of bonds in the topology.",9,[[],["vec",3]]],[11,"angles","","Get the list of angles in the topology.",9,[[],["vec",3]]],[11,"dihedrals","","Get the list of dihedral angles in the topology.",9,[[],["vec",3]]],[11,"impropers","","Get the list of improper dihedral angles in the topology.",9,[[],["vec",3]]],[11,"clear_bonds","","Remove all existing bonds, angles, dihedral angles and…",9,[[]]],[11,"add_bond","","Add a bond between the atoms at indexes `i` and `j` in the…",9,[[]]],[11,"add_bond_with_order","","Add a bond between the atoms at indexes `i` and `j` in the…",9,[[["bondorder",4]]]],[11,"bond_order","","Get the bond order for the bond between the atoms at…",9,[[],["bondorder",4]]],[11,"bond_orders","","Get the bond order for all the bonds in the topology",9,[[],[["vec",3],["bondorder",4]]]],[11,"remove_bond","","Remove any existing bond between the atoms at indexes `i`…",9,[[]]],[11,"residue","","Get a reference to the residue at index `index` from this…",9,[[],[["option",4],["residueref",3]]]],[11,"residue_for_atom","","Get a copy of the residue containing the atom at index…",9,[[],[["option",4],["residueref",3]]]],[11,"residues_count","","Get the number of residues in this topology.",9,[[]]],[11,"add_residue","","Add a residue to this topology.",9,[[["residue",3]],[["result",4],["error",3]]]],[11,"are_linked","","Check if the two residues `first` and `second` from the…",9,[[["residue",3]]]],[11,"new","","Create an empty frame. It will be resized by the library…",10,[[],["frame",3]]],[11,"atom","","Get a reference to the atom at the given `index` in this…",10,[[],["atomref",3]]],[11,"atom_mut","","Get a mutable reference to the atom at the given `index`…",10,[[],["atommut",3]]],[11,"size","","Get the current number of atoms in this frame.",10,[[]]],[11,"resize","","Resize the positions and the velocities in this frame, to…",10,[[]]],[11,"add_atom","","Add an `Atom` and the corresponding position and…",10,[[["atom",3]]]],[11,"remove","","Remove the atom at index `i` in this frame.",10,[[]]],[11,"add_bond","","Add a bond between the atoms at indexes `i` and `j` in the…",10,[[]]],[11,"add_bond_with_order","","Add a bond between the atoms at indexes `i` and `j` in the…",10,[[["bondorder",4]]]],[11,"remove_bond","","Remove any existing bond between the atoms at indexes `i`…",10,[[]]],[11,"add_residue","","Add a copy of `residue` to this frame.",10,[[["residue",3]],[["result",4],["error",3]]]],[11,"distance","","Get the distance between the atoms at indexes `i` and `j`…",10,[[]]],[11,"angle","","Get the angle formed by the atoms at indexes `i`, `j` and…",10,[[]]],[11,"dihedral","","Get the dihedral angle formed by the atoms at indexes `i`,…",10,[[]]],[11,"out_of_plane","","Get the out of plane distance formed by the atoms at…",10,[[]]],[11,"positions","","Get a view into the positions of this frame.",10,[[]]],[11,"positions_mut","","Get a mutable view into the positions of this frame.",10,[[]]],[11,"velocities","","Get a view into the velocities of this frame.",10,[[]]],[11,"velocities_mut","","Get a mutable view into the velocities of this frame.",10,[[]]],[11,"has_velocities","","Check if this frame contains velocity data.",10,[[]]],[11,"add_velocities","","Add velocity data to this frame. If the frame already have…",10,[[]]],[11,"cell","","Get a reference to the `UnitCell` from this frame.",10,[[],["unitcellref",3]]],[11,"cell_mut","","Get a mutable reference to the `UnitCell` from this frame.",10,[[],["unitcellmut",3]]],[11,"set_cell","","Set the `UnitCell` of this frame to `cell`.",10,[[["unitcell",3]]]],[11,"topology","","Get a reference to the `Topology` of this frame.",10,[[],["topologyref",3]]],[11,"set_topology","","Set the `Topology` of this frame to `topology`.",10,[[["topology",3]],[["result",4],["error",3]]]],[11,"step","","Get this frame step, i.e. the frame number in the trajectory",10,[[]]],[11,"set_step","","Set this frame step to `step`.",10,[[]]],[11,"guess_bonds","","Guess the bonds, angles and dihedrals in this `frame`.",10,[[],[["result",4],["error",3]]]],[11,"clear_bonds","","Remove all existing bonds, angles, dihedral angles and…",10,[[]]],[11,"set","","Add a new `property` with the given `name` to this frame.",10,[[]]],[11,"get","","Get a property with the given `name` in this frame, if it…",10,[[],[["option",4],["property",4]]]],[11,"properties","","Get an iterator over all (name, property) pairs for this…",10,[[],["propertiesiter",3]]],[11,"open","","Open the file at the given `path` in the given `mode`.",11,[[],[["trajectory",3],["error",3],["result",4]]]],[11,"open_with_format","","Open the file at the given `path` using a specific file…",11,[[],[["trajectory",3],["error",3],["result",4]]]],[11,"memory_reader","","Read a memory buffer as though it was a formatted file.",11,[[],[["trajectory",3],["error",3],["result",4]]]],[11,"memory_writer","","Write to a memory buffer as though it was a formatted file.",11,[[],[["trajectory",3],["error",3],["result",4]]]],[11,"read","","Read the next step of this trajectory into a `frame`.",11,[[["frame",3]],[["result",4],["error",3]]]],[11,"read_step","","Read a specific `step` of this trajectory into a `frame`.",11,[[["frame",3]],[["result",4],["error",3]]]],[11,"write","","Write a `frame` to this trajectory.",11,[[["frame",3]],[["result",4],["error",3]]]],[11,"set_topology","","Set the `topology` associated with this trajectory. This…",11,[[["topology",3]]]],[11,"set_topology_file","","Set the topology associated with this trajectory by…",11,[[],[["result",4],["error",3]]]],[11,"set_topology_with_format","","Set the topology associated with this trajectory by…",11,[[],[["result",4],["error",3]]]],[11,"set_cell","","Set the unit `cell` associated with a trajectory. This…",11,[[["unitcell",3]]]],[11,"nsteps","","Get the number of steps (the number of frames) in a…",11,[[]]],[11,"memory_buffer","","Obtain the memory buffer written to by the trajectory.",11,[[],[["error",3],["result",4]]]],[11,"path","","Get file path for this trajectory.",11,[[],["string",3]]],[11,"len","","Get the length of the Match.",12,[[]]],[11,"new","","Create a new match containing the atoms in the `atoms`…",12,[[],["match",3]]],[11,"iter","","Iterate over the atomic indexes in the match.",12,[[],["iter",3]]],[11,"new","","Create a new selection from the given selection string.",13,[[["into",8]],[["result",4],["selection",3],["error",3]]]],[11,"size","","Get the size of the selection, i.e. the number of atoms we…",13,[[]]],[11,"string","","Get the selection string used to create this selection.",13,[[],["string",3]]],[11,"evaluate","","Evaluate a selection for a given frame, and return the…",13,[[["frame",3]],[["match",3],["vec",3]]]],[11,"list","","Evaluates a selection of size 1 on a given `frame`. This…",13,[[["frame",3]],["vec",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"into_iter","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"drop","","",6,[[]]],[11,"drop","","",7,[[]]],[11,"drop","","",8,[[]]],[11,"drop","","",9,[[]]],[11,"drop","","",10,[[]]],[11,"drop","","",11,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",0,[[["chfl_status",4]],["error",3]]],[11,"from","","",3,[[["chfl_cellshape",4]],["cellshape",4]]],[11,"from","","",4,[[["chfl_bond_order",4]],["bondorder",4]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[["string",3]]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"next","","",20,[[],["option",4]]],[11,"size_hint","","",20,[[]]],[11,"count","","",20,[[]]],[11,"clone","","",0,[[],["error",3]]],[11,"clone","","",2,[[],["status",4]]],[11,"clone","","",6,[[],["atom",3]]],[11,"clone","","",3,[[],["cellshape",4]]],[11,"clone","","",7,[[],["unitcell",3]]],[11,"clone","","",8,[[],["residue",3]]],[11,"clone","","",4,[[],["bondorder",4]]],[11,"clone","","",9,[[],["topology",3]]],[11,"clone","","",10,[[],["frame",3]]],[11,"clone","","",12,[[],["match",3]]],[11,"clone","","",13,[[],["selection",3]]],[11,"clone","","",5,[[],["property",4]]],[11,"clone","","",1,[[],["formatmetadata",3]]],[11,"cmp","","",4,[[["bondorder",4]],["ordering",4]]],[11,"eq","","",0,[[["error",3]]]],[11,"ne","","",0,[[["error",3]]]],[11,"eq","","",2,[[["status",4]]]],[11,"eq","","",3,[[["cellshape",4]]]],[11,"eq","","",4,[[["bondorder",4]]]],[11,"eq","","",12,[[["match",3]]]],[11,"ne","","",12,[[["match",3]]]],[11,"eq","","",5,[[["property",4]]]],[11,"ne","","",5,[[["property",4]]]],[11,"eq","","",1,[[["formatmetadata",3]]]],[11,"ne","","",1,[[["formatmetadata",3]]]],[11,"partial_cmp","","",4,[[["bondorder",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",5,[[["property",4]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["property",4]]]],[11,"le","","",5,[[["property",4]]]],[11,"gt","","",5,[[["property",4]]]],[11,"ge","","",5,[[["property",4]]]],[11,"deref","","",14,[[],["atom",3]]],[11,"deref","","",15,[[],["atom",3]]],[11,"deref","","",16,[[],["unitcell",3]]],[11,"deref","","",17,[[],["unitcell",3]]],[11,"deref","","",18,[[],["residue",3]]],[11,"deref","","",19,[[],["topology",3]]],[11,"deref_mut","","",15,[[],["atom",3]]],[11,"deref_mut","","",17,[[],["unitcell",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","","",12,[[]]],[11,"description","","",0,[[]]]],"p":[[3,"Error"],[3,"FormatMetadata"],[4,"Status"],[4,"CellShape"],[4,"BondOrder"],[4,"Property"],[3,"Atom"],[3,"UnitCell"],[3,"Residue"],[3,"Topology"],[3,"Frame"],[3,"Trajectory"],[3,"Match"],[3,"Selection"],[3,"AtomRef"],[3,"AtomMut"],[3,"UnitCellRef"],[3,"UnitCellMut"],[3,"ResidueRef"],[3,"TopologyRef"],[3,"PropertiesIter"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);